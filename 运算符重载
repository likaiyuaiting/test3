C++语言允许程序员重新定义已有的运算符，使其能够按用户的要求完成一些特定的操作，这就是运算符重载。经重载后的运算符重载。经重载后的运算符能够直接对用户自定义的数据进行操作运算。本章介绍有运算符重载方面的内容。

C++语言为实现运算符重载提供了一种方法，即将运算符看作一种特殊类型的函数，运算符重载是通过对运算符的重载实现的。运算符函数名由关键字operator和重载的运算符组成。
重载运算符的函数一般格式如下：
函数类型 operator 运算符（形参列表）
{运算符重载处理}

重载运算符要遵循的规则：
1、C++语言允许重载的运算符表见表5-1，不允许重载的运算符见表5-2。
2、运算符重载是针对新类型数据的实际需要，对原有运算符的运算进行适当的改造。一般来说，重载的功能应与原有功能类似。
3、重载之后，运算符的优先级和结核性都不改变。
4、重载运算符的函数不能有默认的参数。
5、重载时，运算符的操作数个数保持不变，即双目运算符任然是双目运算符，单目运算符任然是单目运算符。
6、重载的运算符至少有一个操作数是自定义类的对象。对于双目运算符，左操作数要求一定是自定义的对象，右操作数可以实对象，也可以是整数、实数等基本数据。
7、运算符重载函数可以使类的成员函数，也可以是类的友元函数，还可以是普通函数。
